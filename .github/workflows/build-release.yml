name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
            artifact: excel-viewer-windows-x64.zip
          - os: ubuntu-latest
            rid: linux-x64
            artifact: excel-viewer-linux-x64.tar.gz
          - os: macos-latest
            rid: osx-x64
            artifact: excel-viewer-macos-x64.tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and publish
        run: |
          dotnet publish src/ExcelViewer.UI.Avalonia/ExcelViewer.UI.Avalonia.csproj \
            --configuration Release \
            --runtime ${{ matrix.rid }} \
            --self-contained true \
            -p:PublishSingleFile=false \
            -p:PublishTrimmed=false \
            --output ./publish/${{ matrix.rid }}

      - name: Package Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Compress-Archive -Path ./publish/${{ matrix.rid }}/* -DestinationPath ${{ matrix.artifact }}

      - name: Package Linux/macOS
        if: matrix.os != 'windows-latest'
        run: |
          cd ./publish/${{ matrix.rid }}
          tar -czf ../../${{ matrix.artifact }} .
          cd ../..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure
        run: ls -R ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/**/*
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
